name: ðŸ§ª API Tests

on:
  push:
    branches: [main, develop]
    paths: ['src/api/**', 'src/tests/**', 'src/**/*.js']
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC

env:
  NODE_VERSION: '18'

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Run Unit Tests
        run: npm run test:unit -- --coverage
        
      - name: Upload Coverage Reports
        uses: codecov/codecov-action@v4
        with:
          file: coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
        if: env.CODECOV_TOKEN != ''

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    if: github.event_name != 'schedule'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Run Integration Tests
        run: npm run test:integration
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TEST_TOKEN }}
          
      - name: Generate Test Report
        run: npm run report:tests
        
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: test-results/
          retention-days: 30

  construction-api-tests:
    name: Construction API Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Test Project Management API
        run: npm run test:api:projects
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TEST_TOKEN }}
          
      - name: Test Material Management API
        run: npm run test:api:materials
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TEST_TOKEN }}
          
      - name: Test Client Management API
        run: npm run test:api:clients
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TEST_TOKEN }}
          
      - name: Test Integration Hub API
        run: npm run test:api:integrations
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TEST_TOKEN }}

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: integration-tests
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        
      - name: Run E2E Tests
        run: npm run test:e2e
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TEST_TOKEN }}
          
      - name: Upload E2E Results
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: |
            playwright-report/
            test-results/
          retention-days: 30
        if: always()

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    if: github.event_name == 'schedule' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Run Performance Tests
        run: npm run test:performance
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TEST_TOKEN }}
          
      - name: Upload Performance Report
        uses: actions/upload-artifact@v4
        with:
          name: performance-test-results
          path: performance-results/
          retention-days: 90

  security-tests:
    name: Security Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Run Security Tests
        run: npm run test:security
        
      - name: Test API Authentication
        run: npm run test:auth
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TEST_TOKEN }}
          
      - name: Test Data Validation
        run: npm run test:validation
        
      - name: Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: security-test-results
          path: security-results/
          retention-days: 90

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, construction-api-tests, e2e-tests]
    if: always()
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Generate Test Summary
        run: |
          echo "## ðŸ§ª Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Run ID:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### Test Status" >> $GITHUB_STEP_SUMMARY
          echo "- Unit Tests: ${{ needs.unit-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Integration Tests: ${{ needs.integration-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Construction API Tests: ${{ needs.construction-api-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- E2E Tests: ${{ needs.e2e-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          npm run test:summary >> $GITHUB_STEP_SUMMARY